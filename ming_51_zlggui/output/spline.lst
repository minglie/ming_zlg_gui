C51 COMPILER V9.52.0.0   SPLINE                                                            01/09/2021 20:48:21 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE SPLINE
OBJECT MODULE PLACED IN .\output\spline.obj
COMPILER INVOKED BY: D:\Program Files\keil\C51\BIN\C51.EXE src\spline.c LARGE INCDIR(.\head;.\src) PRINT(.\output\spline
                    -.lst) TABS(2) OBJECT(.\output\spline.obj)

line level    source

   1          /****************************************************************************************
   2          * 文件名：SPLINE.C
   3          * 功能：二次参数样条曲线生成程序。
   4          * 作者：黄绍斌
   5          * 日期：2003.09.09
   6          ****************************************************************************************/
   7          #include  "config.h"
   8          #include  "math.h"
   9          
  10          
  11          /****************************************************************************
  12          * 名称：max()
  13          * 功能：求两个整数中最大的整数值。
  14          * 入口参数：a     整数1
  15          *          b    整数2
  16          * 出口参数：返回最大的整数值
  17          ****************************************************************************/
  18          int  max(int a, int b)
  19          {  
  20   1        if(a>b) 
  21   1          return(a);
  22   1          else
  23   1          return(b);
  24   1      }
  25          
  26          /****************************************************************************
  27          * 名称：abs()
  28          * 功能：求一个整数的绝对值。
  29          * 入口参数：a     取绝对值的数据
  30          * 出口参数：返回a的绝对值
  31          ****************************************************************************/
  32          int  abs(int a)
  33          {  if(a>0) return(a);
  34   1           else  return(-a);
  35   1      }
  36          
  37          
  38          
  39          /* 曲线类变量及相关函数 */
  40          typedef  struct
  41          {  
  42            float   Ax, Ay;     // 定义A、B、C点坐标变量
  43              float   Bx, By;
  44              float   Cx, Cy;
  45             
  46              int     Ndiv;     // 定义曲线平滑参数变量     
  47          }CURVE;  
  48          
  49          #define  DIV_FACTOR     8.0       /* 平滑控制参数 */
  50          /****************************************************************************
  51          * 名称：CURVE_SetCurve()
  52          * 功能：设置三点曲线参数。
  53          * 入口参数：  cl    要操作的曲线对象，CURVE结构
  54          *           ax    a点x坐标值
C51 COMPILER V9.52.0.0   SPLINE                                                            01/09/2021 20:48:21 PAGE 2   

  55          *           ay    a点y坐标值
  56          *     bx    b点x坐标值
  57          *           by    b点y坐标值
  58          *     cx    c点x坐标值
  59          *           cy    c点y坐标值
  60          * 出口参数：无
  61          * 说明：
  62          ****************************************************************************/
  63          void  CURVE_SetCurve(CURVE *cl,
  64                               float ax, float ay, 
  65                             float bx, float by,
  66                             float cx, float cy) 
  67          {  cl->Ax = ax;
  68   1         cl->Ay = ay;
  69   1         cl->Bx = bx; 
  70   1         cl->By = by;
  71   1         cl->Cx = cx; 
  72   1         cl->Cy = cy;
  73   1         
  74   1         cl->Ndiv = (int)(max( abs((int)ax), abs((int)ay) ) / DIV_FACTOR);
  75   1      }
  76          
  77          
  78          /****************************************************************************
  79          * 名称：CURVE_GetCount()
  80          * 功能：取出平滑参数Ndiv+1的值。
  81          * 入口参数：cl    要操作的曲线对象，CURVE结构
  82          * 出口参数：返回Ndiv+1的值
  83          * 说明：若Ndiv为0，则先设置其为1。
  84          ****************************************************************************/
  85          int  CURVE_GetCount(CURVE *cl)
  86          {  if(0 == cl->Ndiv) cl->Ndiv=1;
  87   1      
  88   1         return(cl->Ndiv+1);
  89   1      }
  90          
  91          
  92          /****************************************************************************
  93          * 名称：CURVE_GetCurve()
  94          * 功能：增加曲线点到points。
  95          * 入口参数：cl      要操作的曲线对象，CURVE结构
  96          *          x      新增点的x坐标值
  97          *      y      新增点的y坐标值
  98          *      points   曲线点缓冲区
  99          *          PointCount 缓冲区的当前指针
 100          * 出口参数：无
 101          * 说明：
 102          ****************************************************************************/
 103          void  CURVE_GetCurve(CURVE *cl, float x, float y, PointXY points[], int *PointCount)
 104          {  int    X, Y;
 105   1         float  t, f, g, h;
 106   1         int    i;
 107   1      
 108   1         if(cl->Ndiv==0)  cl->Ndiv = 1;
 109   1      
 110   1          /* 新增一个点到结构 */
 111   1        X = (int)x; 
 112   1        Y = (int)y;
 113   1        points[*PointCount].x = X;
 114   1        points[*PointCount].y = Y;
 115   1        (*PointCount)++;
 116   1      
C51 COMPILER V9.52.0.0   SPLINE                                                            01/09/2021 20:48:21 PAGE 3   

 117   1          /* 变换出ndiv个点 */
 118   1        for(i=1; i<=cl->Ndiv; i++)
 119   1        {  t = 1.0f / (float)cl->Ndiv * (float)i;
 120   2           f = t * t * (3.0f - 2.0f * t);
 121   2           g = t * (t - 1.0f) * (t-1.0f);
 122   2           h = t * t * (t-1.0f);
 123   2          
 124   2           X = (int)(x + cl->Ax*f + cl->Bx*g + cl->Cx*h);
 125   2           Y = (int)(y + cl->Ay*f + cl->By*g + cl->Cy*h);
 126   2          
 127   2           points[*PointCount].x = X;
 128   2           points[*PointCount].y = Y;
 129   2           (*PointCount)++;
 130   2        }
 131   1      }
 132          
 133          
 134          
 135          /***************************************************************************/
 136          
 137          
 138          /****************************************************************************
 139          * 名称：SPLINE_Spline()
 140          * 功能：样条曲线初始化函数，将特征点输入到样条曲线对象中。
 141          * 入口参数：sl      要操作的样条曲线对象，SPLINE结构
 142          *      pt     特征点数据    
 143          *          np     特征点个数
 144          * 出口参数：无
 145          * 说明：
 146          ****************************************************************************/
 147          void  SPLINE_SetSpline(SPLINE *sl, PointXY pt[], int np)
 148          {  int  i;
 149   1      
 150   1         sl->Np = np;
 151   1      
 152   1         /* 将点数据复制到sl对象 */
 153   1         for(i=0; i<sl->Np; i++) 
 154   1         {  sl->Px[i] = (float)pt[i].x;  
 155   2          sl->Py[i] = (float)pt[i].y;
 156   2         }
 157   1      }
 158          
 159          
 160          
 161          /****************************************************************************
 162          * 名称：SPLINE_MatrixSolve()
 163          * 功能：求解矩阵。
 164          * 入口参数：sl    要操作的样条曲线对象，SPLINE结构
 165          *          B    需操作B点数据(数组)
 166          * 出口参数：无
 167          * 说明：由SPLINE_Generate()调用，计算值保存在B返回。
 168          ****************************************************************************/
 169          void  SPLINE_MatrixSolve(SPLINE *sl, float B[]) 
 170          {  float  Work[NPMAX];
 171   1         float  WorkB[NPMAX];
 172   1         int    i, j;
 173   1          
 174   1         for(i=0; i<=(sl->Np-1); i++) 
 175   1         {  Work[i] = B[i] / sl->Mat[1][i];
 176   2          WorkB[i] = Work[i];
 177   2         }
 178   1      
C51 COMPILER V9.52.0.0   SPLINE                                                            01/09/2021 20:48:21 PAGE 4   

 179   1         for(j=0; j<10; j++) 
 180   1         {  Work[0] = (B[0] - sl->Mat[2][0] * WorkB[1]) / sl->Mat[1][0];
 181   2          for(i=1; i<(sl->Np-1); i++ ) 
 182   2            {  Work[i] = (B[i] - sl->Mat[0][i] * WorkB[i-1] - sl->Mat[2][i] * WorkB[i+1]) / sl->Mat[1][i];
 183   3          }
 184   2          Work[sl->Np-1] = (B[sl->Np-1] - sl->Mat[0][sl->Np-1] * WorkB[sl->Np-2]) / sl->Mat[1][sl->Np-1];
 185   2      
 186   2          for(i=0; i<=(sl->Np-1); i++) 
 187   2          {  WorkB[i] = Work[i];
 188   3          }
 189   2         }
 190   1         
 191   1         for(i=0; i<=(sl->Np-1); i++) 
 192   1         {  B[i] = Work[i];
 193   2         }
 194   1         
 195   1      }
 196          
 197          
 198          
 199          /****************************************************************************
 200          * 名称：SPLINE_Generate()
 201          * 功能：产生样条曲线图形。产生的各个端点保存到sl的结构内。
 202          * 入口参数：sl    要操作的样条曲线对象，SPLINE结构
 203          * 出口参数：无
 204          * 说明：sl要先使用SPLINE_SetSpline()设置各个特征点。
 205          ****************************************************************************/
 206          void  SPLINE_Generate(SPLINE *sl) 
 207          {  float  k[NPMAX];
 208   1         float  AMag , AMagOld;
 209   1         int    i;
 210   1      
 211   1         /* 设置A点值 */
 212   1         for(i=0 ; i<=(sl->Np-2); i++ ) 
 213   1         {  sl->Ax[i] = sl->Px[i+1] - sl->Px[i];
 214   2          sl->Ay[i] = sl->Py[i+1] - sl->Py[i];
 215   2         }
 216   1          
 217   1         /* 计算k变量 */
 218   1         AMagOld = (float)sqrt(sl->Ax[0] * sl->Ax[0] + sl->Ay[0] * sl->Ay[0]);
 219   1         for(i=0 ; i<=(sl->Np-3); i++) 
 220   1         {  AMag = (float)sqrt(sl->Ax[i+1] * sl->Ax[i+1] + sl->Ay[i+1] * sl->Ay[i+1]);
 221   2          k[i] = AMagOld / AMag;
 222   2          AMagOld = AMag;
 223   2         }
 224   1         k[sl->Np-2] = 1.0f;
 225   1      
 226   1         /* 矩阵计算 */
 227   1         for(i=1; i<=(sl->Np-2); i++) 
 228   1         {  sl->Mat[0][i] = 1.0f;
 229   2          sl->Mat[1][i] = 2.0f * k[i-1] * (1.0f + k[i-1]);
 230   2          sl->Mat[2][i] = k[i-1] * k[i-1] * k[i];
 231   2         }
 232   1         sl->Mat[1][0] = 2.0f;
 233   1         sl->Mat[2][0] = k[0];
 234   1         sl->Mat[0][sl->Np-1] = 1.0f;
 235   1         sl->Mat[1][sl->Np-1] = 2.0f * k[sl->Np-2];
 236   1       
 237   1         for(i=1; i<=(sl->Np-2);i++) 
 238   1         {  sl->Bx[i] = 3.0f*(sl->Ax[i-1] + k[i-1] * k[i-1] * sl->Ax[i]);
 239   2          sl->By[i] = 3.0f*(sl->Ay[i-1] + k[i-1] * k[i-1] * sl->Ay[i]);
 240   2         }
C51 COMPILER V9.52.0.0   SPLINE                                                            01/09/2021 20:48:21 PAGE 5   

 241   1         sl->Bx[0] = 3.0f * sl->Ax[0];
 242   1         sl->By[0] = 3.0f * sl->Ay[0];
 243   1         sl->Bx[sl->Np-1] = 3.0f * sl->Ax[sl->Np-2];
 244   1         sl->By[sl->Np-1] = 3.0f * sl->Ay[sl->Np-2];
 245   1      
 246   1         SPLINE_MatrixSolve(sl, sl->Bx);
 247   1         SPLINE_MatrixSolve(sl, sl->By);
 248   1      
 249   1         for(i=0 ; i<=sl->Np-2 ; i++ ) 
 250   1         {  sl->Cx[i] = k[i] * sl->Bx[i+1];
 251   2          sl->Cy[i] = k[i] * sl->By[i+1];
 252   2         }
 253   1      }
 254          
 255          
 256          
 257          
 258          
 259          /****************************************************************************
 260          * 名称：SPLINE_GetCurveCount()
 261          * 功能：取得样条曲线上端点个数值。
 262          * 入口参数：sl    要操作的样条曲线对象，SPLINE结构
 263          * 出口参数：返回值即是样条曲线各个端点个数
 264          * 说明：sl要先使用SPLINE_SetSpline()设置各个特征点。
 265          ****************************************************************************/
 266          int  SPLINE_GetCurveCount(SPLINE *sl)
 267          {  CURVE  curve_bak;
 268   1         int    count = 0;
 269   1         int    i;
 270   1         
 271   1         for(i=0; i<(sl->Np - 1); i++)  // 历遍所有特征点 
 272   1         {  /* 设置样条曲线(三点)curve_bak */
 273   2            CURVE_SetCurve(&curve_bak, 
 274   2                           sl->Ax[i], sl->Ay[i], 
 275   2                           sl->Bx[i], sl->By[i], 
 276   2                           sl->Cx[i], sl->Cy[i]);
 277   2            /* 取得曲线curve_bak上端点的个数 */
 278   2          count += CURVE_GetCount(&curve_bak);
 279   2         }
 280   1         
 281   1         return(count);
 282   1      }
 283          
 284          
 285          
 286          /****************************************************************************
 287          * 名称：SPLINE_GetCurve()
 288          * 功能：取出样条曲线上各个端点，以便于使用GUI_Line()函数画出曲线。
 289          * 入口参数：sl      要操作的样条曲线对象，SPLINE结构
 290          *          points   用于接收曲线点的缓冲区，PointXY数组
 291          *          PointCount 用于接收曲线点个数的指针
 292          * 出口参数：无
 293          * 说明：接收曲线点由points返回，曲线点个数由PointCount返回；
 294          *      sl要先使用SPLINE_SetSpline()设置各个特征点。
 295          ****************************************************************************/
 296          void  SPLINE_GetCurve(SPLINE *sl, PointXY points[], int *PointCount)
 297          {  CURVE  curve_bak;
 298   1         int    i;
 299   1      
 300   1         *PointCount = 0;           // 初始化点计数器为0
 301   1         for(i=0; i<(sl->Np-1); i++)      // 历遍所有特征点
 302   1         {  /* 设置样条曲线(三点)curve_bak */
C51 COMPILER V9.52.0.0   SPLINE                                                            01/09/2021 20:48:21 PAGE 6   

 303   2            CURVE_SetCurve(&curve_bak, 
 304   2                   sl->Ax[i], sl->Ay[i],
 305   2                           sl->Bx[i], sl->By[i], 
 306   2                           sl->Cx[i], sl->Cy[i]);
 307   2                           
 308   2            /* 取得样条曲线curve_bak的端点数据及个数 */               
 309   2          CURVE_GetCurve(&curve_bak, 
 310   2                         sl->Px[i], sl->Py[i], 
 311   2                         points, 
 312   2                         PointCount);
 313   2         }
 314   1      }
 315          
 316          
 317          
 318          
 319            
 320          
 321          
 322          
 323          
 324          
 325          
 326          
 327          
 328          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   6879    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----     289
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
